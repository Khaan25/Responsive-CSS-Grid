@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@100;300;400;500;700;900&display=swap");
/* ========== VARIABLES ========== */
:root 
{
    /* COLORS */
    --body-background-color: #f9f9f9;
    --b-background-color: #7B86F5;
    /* TypoGraphy */
    --body-font: 'Poppins', sans-serif;
}

/* ========== BASE ========== */
*{
    box-sizing: border-box;
}

/* ========== LAYOUT ========== */
body
{
    background-color: var(--body-background-color);
    min-height: 100vh;
    display: grid;
    grid-template-columns: repeat(auto-fit, 30ch);
    place-content: center;
    grid-gap: 5vh;
    max-width: calc((30ch * 3) + (5vh * 2) + 2rem);
    margin-left: auto;
    margin-right: auto;
    padding: 1rem;
    font-family: var(--body-font);
}

/* ========== SPAN ========== */
span
{
    background-color: white;
    padding: 1rem;
    border-radius: 7px;
    box-shadow: 0 2px 6px -2px rgba(black, 0.42);
    height: 30vh;
    display: grid;
    grid-gap: 0.5rem;

    /* ========== B TAG ========== */
    b{
        background-color: var(--b-background-color);
        border-radius: 4px;
        display: grid;
        place-items: center;
        color: white;
        font-size: 1.5rem;
    }
    &.template
    {
        // Using `repeat();` lets us explicity define
        // the number of rows or columns to allow.
        /* ========== 2 COLUMN SPAN ========== */
        &-2col
        {
            grid-template-columns: repeat(2, 1fr);
        }
        /* ========== 3 COLUMN SPAN ========== */
        &-3col
        {
            grid-template-columns: repeat(3, 1fr);
        }
        // NOTE 2col will also create this arrangment
        // this is just more explicit
        /* ========== 4 BOXES SPAN ========== */
        &-4up
        {
            // grid-template-rows / grid-template-columns
            grid-template: repeat(2, 1fr) / repeat(2, 1fr);
        }       
        &-sidebar--left
        {
            grid-template: "sidebar mainA"
						   "sidebar mainB";

			> :nth-child(1) 
            {
				grid-area: sidebar;
			}
        }
        &-sidebar--right 
        {
			grid-template: "mainA sidebar"
						   "mainB sidebar";

			> :nth-child(3) 
   {
				grid-area: sidebar;
			}
		}
    }
}